package com.bookstore.demo.controller;

//UserController.java
@RestController
@RequestMapping("/api/users")
public class UserController {

 private final UserService userService;

 @Autowired
 public UserController(UserService userService) {
     this.userService = userService;
 }

 @GetMapping
 public List<User> getAllUsers() {
     return userService.getAllUsers();
 }

 @GetMapping("/{userId}")
 public ResponseEntity<User> getUserById(@PathVariable Long userId) {
     try {
         User user = userService.getUserById(userId);
         return ResponseEntity.ok(user);
     } catch (EntityNotFoundException e) {
         return ResponseEntity.notFound().build();
     } catch (Exception e) {
         throw new UserException("Erro ao obter o usuário com ID: " + userId, e);
     }
 }

 @PostMapping
 public ResponseEntity<User> addUser(@RequestBody User user) {
     try {
         User addedUser = userService.addUser(user);
         return ResponseEntity.ok(addedUser);
     } catch (Exception e) {
         throw new UserException("Erro ao adicionar um novo usuário", e);
     }
 }

 @DeleteMapping("/{userId}")
 public ResponseEntity<Void> deleteUser(@PathVariable Long userId) {
     try {
         userService.deleteUser(userId);
         return ResponseEntity.noContent().build();
     } catch (EntityNotFoundException e) {
         return ResponseEntity.notFound().build();
     } catch (Exception e) {
         throw new UserException("Erro ao excluir o usuário com ID: " + userId, e);
     }
 }

 // Adicione outros métodos conforme necessário
}
